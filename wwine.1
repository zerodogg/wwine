.IX Title "WWINE 1"
.TH WWINE 1 "2009-10-05" "wwine 0.1" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
wwine \- a simple wine(1) wrapper
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
wwine \fI(\s-1WWINE\s0 \s-1PARAMETERS\s0)\fR \fI\s-1PROGRAM\s0\fR \*(-- \fI[\s-1PROGRAM\s0 \s-1ARGUMENTS\s0]\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBwwine\fR is a a \fIwine\fR\|(1) wrapper. It wraps various flavours of wine
(including vanilla wine and crossover office/games) into a single
unified interface, complete with full bottle support for all
of them (including vanilla wine).
.PP
It integrates well with all flavours, so for instance applications
installed using crossover will be manageable through the usual crossover
interface.
.PP
For vanilla wine it uses \s-1WINEPREFIX\s0 to achieve bottle support,
creating bottles as ~/.winebottle_[\s-1BOTTLE_NAME\s0].
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Display the help screen
.IP "\fB\-w, \-\-wine\fR \fI\s-1FLAVOUR\s0\fR" 4
.IX Item "-w, --wine FLAVOUR"
Use the supplied flavour of wine. The default is to use vanilla wine.

Possible parameters: wine, cxgames, cxoffice, cedega, cxg (alias for cxgames),
cxo (alias for cxoffice) or /path/to/a/wine.binary

See also \fI\-\-cxinstalldir\fR.
.IP "\fB\-b, \-\-bottle\fR \fI\s-1NAME\s0\fR" 4
.IX Item "-b, --bottle NAME"
Use the bottle with the name supplied. For cxgames, cxoffice or cedega
it uses the flavours builtin bottle support. For vanilla wine it sets
\&\s-1WINEPREFIX\s0 to use ~/.winebottle_\fI\s-1NAME\s0\fR. It defaults to no bottle,
in which case vanilla wine will use ~/.wine, cxoffice/cxgames will
use the bottle defined as default and for cedega a bottle named 'wwineFolder'
will be used.
.IP "\fB\-k, \-\-kill\fR" 4
.IX Item "-k, --kill"
Attempt to kill all running wine processes. See also \fI\-\-drykill\fR
.IP "\fB\-\-drykill\fR" 4
.IX Item "--drykill"
Print what \fI\-\-kill\fR would have done, without actually doing anything.
.IP "\fB\-c, \-\-cxinstalldir\fR \fI\s-1PATH\s0\fR" 4
.IX Item "-c, --cxinstalldir PATH"
Use the supplied path as the path to either a crossover office/games install
directory, or as a directory that contains a cxoffice and/or cxgames directory.
.IP "\fB\-\-wrap\fR \fI\s-1PATH\s0\fR" 4
.IX Item "--wrap PATH"
Generate a wrapper script of the current command-line and write it to
\&\fI\s-1PATH\s0\fR. Simply write a wwine command as usual, and append \-\-wrap \fI\s-1PATH\s0\fR
to it, and wwine will generate a wrapper script that you can use to
run that command with at any later time so you don't have to remember
or retype it every time.

Generally \fI\s-1PATH\s0\fR should be somewhere in your \f(CW$PATH\fR (ie. ~/bin/somecommand)
so that you can start the command from anywhere.

By default the wrapper script will change directory to the directory
you were in when you created it, but you can use \fB\-\-wrapdir\fR to explicitly
supply one.

The wrapper script also contains some basic code that ensures that
even if you remove or move wwine, the wrapper script will keep working.
.IP "\fB\-\-wrapdir\fR \fI\s-1PATH\s0\fR" 4
.IX Item "--wrapdir PATH"
Change directory to \fI\s-1PATH\s0\fR in the wrapper script generated by \fI\-\-wrap\fR.
If this is not supplied wwine will change to the directory that you
were in at the time the wrapper script was created.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
Increase verbosity. When this is present wwine will tell you the exact
commands it is running.
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Show the manpage. Normally 'man wwine' would do, but when wwine is
installed from a rubygem the wwine manpage isn't placed anywhere
in \fIman\fR\|(1)'s path, this will autodetect its location and issue man
directly on the wwine.1 file (and thus work even when 'man wwine'
does not).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "\fIwwine file.exe\fR" 4
.IX Item "wwine file.exe"
The same as 'WINEDEBUG=\-all wine file.exe'
.IP "\fIwwine \-b file file.exe\fR" 4
.IX Item "wwine -b file file.exe"
Runs file.exe in wine, using the 'file' bottle.
.IP "\fIwwine \-w cxg \-b file file.exe\fR" 4
.IX Item "wwine -w cxg -b file file.exe"
Runs file.exe in crossover games using the cxgames 'file' bottle
.IP "\fIwwine \-\-cxinstalldir ~/cxgames7.0/ \-w cxg \-b file file.exe\fR" 4
.IX Item "wwine --cxinstalldir ~/cxgames7.0/ -w cxg -b file file.exe"
Runs file.exe in the version of crossover games that is installed at
\&\fI~/cxgames7.0\fR, using the cxgames 'file' bottle.

\&\-\-cxinstalldir can be useful to run something in a version of cxgames/cxoffice
other than your primary one. Ie. if a regression causes it to not run in a
later version.
.IP "\fIwwine \-w cxg \-b file file.exe \-\-wrap ~/bin/startFile\fR" 4
.IX Item "wwine -w cxg -b file file.exe --wrap ~/bin/startFile"
This causes wwine to create a wrapper shell script at ~/bin/startFile.
When you run that wrapper script, it will cd to the directory
you were in when the script was created, and issue a wwine command
with the above arguments. If you remove/uninstall wwine, the
wrapper script will most likely keep working as it has a fallback
that gets run if wwine cannot be found.

If you are not in the directory that you want wwine to run the file
from, you may use \-\-wrapdir to explicitly specify it.
.IP "\fIwwine \-k\fR" 4
.IX Item "wwine -k"
Will make wwine attempt to kill all running wine processes on this system.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Requires at least one of wine, cxoffice, cxgames or cedega.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.IP "\fB\s-1WWINE_VERBOSE\s0\fR" 4
.IX Item "WWINE_VERBOSE"
If this environment variable is set to the number '1' (ie. WWINE_VERBOSE=1) wwine
will act as if \-\-verbose was supplied. This is useful if you want to view verbose
output from a launch script you created with \-\-wrap.
.IP "\fB\s-1WINEDEBUG\s0\fR" 4
.IX Item "WINEDEBUG"
If this is not set, wwine will set it to \-all when using \-w wine.
.IP "\fB\s-1WINEPREFIX\s0\fR" 4
.IX Item "WINEPREFIX"
wwine uses the \s-1WINEPREFIX\s0 environment variable to add bottle support when
in \-w wine mode. It will override any existing \s-1WINEPREFIX\s0 that is set.
.PP
Any environment variables that wwine sets while it is running will be output
by wwine when in \-\-verbose mode.
.SH "HELP/SUPPORT"
.IX Header "HELP/SUPPORT"
If you need help or support please visit the website at <http://random.zerodogg.org/wwine>
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
If you find a bug, please report it at <http://random.zerodogg.org/wwine/bugs>
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\fBwwine\fR is written by Eskild Hustvedt <\fIcode at zerodogg dot org\fR>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (C) Eskild Hustvedt 2009
.PP
This is free software; see the source for copying conditions.  There is \s-1NO\s0
warranty; not even for \s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
